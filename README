MODO DE USO:
========================
setear el path de openSMILE en el archivo de configuración que corresponda (.zshrc, .profile, etc) 

export PATH="$DIR/opensmile/inst/bin"

donde DIR es el directorio completo donde se encuentra.

ejecutar el script "clasificador.sh" del siguiente modo:

./clasificador archivo.wav

el resultado será mostrado en consola y se crearán logfiles en la carpeta processing para más detalles.


SELECCIÓN DE ATRIBUTOS:
========================
Probamos diferentes métodos de selección de atributos, de cada uno de ellos tomamos los primeros
40. 
Luego, se corrieron varios clasificadores diferentes: Bayes, Lazy, Trees, etc.
El que mejor resultado nos dio lazyIB1.
Quitando y agregando atributos sobre los 40 originales, 
notamos que el corportamiento mejoraba tomando los primeros 36 atributos de Ranker. 
De esta forma obtuvimos una clasificación con solo 2 errores sobre el training set usando 5 fold.
Este modelo fue guardado.
Lo que hace el algoritmo de lazyIB1, es no construir un modelo y esperar hasta que sea necesaria la clasificación de un nuevo dato para, entonces, buscar los vecinos cuyos atributos mejor aproximen a este y luego asignarle la clase de estos.

IMPLEMENTACIÓN:
=======================
Con un script de python (get_attr.py) seleccionamos los atributos de los wav.
Utilizando el comando de openSmile:

SMILExtract -C config/IS10_paraling.conf -I ../tp2-dev/ i -O output.arff -instname i[4]

donde i es el archivo wav NNN-{m/f}.wav. 

Agregamos la clase {m,f} en el .arff modificando el campo 

"@attribute name" por "@attribute sexo {m,f}""

Una vez seleccionados los atributos y el modelo, implementamos un script de bash (clasificador.sh) 
que predice el sexo de un audio (ver "MODO DE USO")



